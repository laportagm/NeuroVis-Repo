name: Performance Regression Alerts

on:
  push:
    branches: [ main, develop, TheDefaultBranch ]
  pull_request:
    branches: [ main, develop, TheDefaultBranch ]

jobs:
  performance-monitoring:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Godot
      uses: chickensoft-games/setup-godot@v2
      with:
        version: '4.4.1'
        include-templates: true
        
    - name: Import project
      run: godot --headless --import --quit-after 10
      
    - name: Run performance benchmarks
      run: godot --headless --script scripts/benchmarks/BenchmarkRunner.gd --quit-after 60
      
    - name: Download baseline benchmarks
      uses: actions/download-artifact@v4
      with:
        name: performance-baseline
        path: baseline/
      continue-on-error: true
      
    - name: Compare with baseline
      run: |
        if [ -f "baseline/baseline-benchmarks.json" ]; then
          godot --headless --script scripts/benchmarks/PerformanceComparer.gd -- baseline/baseline-benchmarks.json benchmark-results.json
        else
          echo "No baseline found, creating initial baseline"
          cp benchmark-results.json baseline-benchmarks.json
        fi
      
    - name: Check for regressions
      id: regression-check
      run: |
        if [ -f "performance-comparison.json" ]; then
          # Extract regression count from comparison
          REGRESSIONS=$(grep -o '"regressions":[0-9]*' performance-comparison.json | cut -d':' -f2 || echo "0")
          echo "regressions=$REGRESSIONS" >> $GITHUB_OUTPUT
          echo "Found $REGRESSIONS performance regressions"
          
          # Set alert threshold (fail if more than 2 regressions)
          if [ "$REGRESSIONS" -gt 2 ]; then
            echo "ALERT: Significant performance regression detected!"
            echo "alert=true" >> $GITHUB_OUTPUT
          else
            echo "alert=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "regressions=0" >> $GITHUB_OUTPUT
          echo "alert=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Create performance alert issue
      if: steps.regression-check.outputs.alert == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const regressions = '${{ steps.regression-check.outputs.regressions }}';
          
          let body = `# üö® Performance Regression Alert
          
          **${regressions} performance regressions detected** in commit ${{ github.sha }}
          
          ## Details
          - **Branch:** ${{ github.ref_name }}
          - **Commit:** ${{ github.sha }}
          - **Author:** ${{ github.actor }}
          - **Workflow:** ${{ github.run_id }}
          
          ## Performance Impact`;
          
          if (fs.existsSync('performance-comparison.md')) {
            const comparison = fs.readFileSync('performance-comparison.md', 'utf8');
            body += '\n\n' + comparison;
          }
          
          body += `
          
          ## Actions Required
          1. Review the performance changes in this commit
          2. Investigate potential causes of regression
          3. Consider optimizations or revert if necessary
          4. Update performance baselines if changes are intentional
          
          **Auto-generated by Performance Monitoring**`;
          
          // Create issue
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `üö® Performance Regression: ${regressions} metrics degraded`,
            body: body,
            labels: ['performance', 'regression', 'needs-investigation']
          });
      
    - name: Post PR comment on regression
      if: github.event_name == 'pull_request' && steps.regression-check.outputs.regressions != '0'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const regressions = '${{ steps.regression-check.outputs.regressions }}';
          
          let comment = `## ‚ö° Performance Impact Summary
          
          **${regressions} performance regressions detected** in this PR.
          `;
          
          if (fs.existsSync('performance-summary.md')) {
            const summary = fs.readFileSync('performance-summary.md', 'utf8');
            comment += '\n' + summary;
          }
          
          if (regressions > 2) {
            comment += `
            
            ‚ö†Ô∏è **This PR introduces significant performance regressions and should be reviewed carefully before merging.**`;
          }
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
      
    - name: Update performance baseline
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/TheDefaultBranch'
      uses: actions/upload-artifact@v4
      with:
        name: performance-baseline
        path: |
          benchmark-results.json
        retention-days: 90
        
    - name: Upload detailed results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results-${{ github.sha }}
        path: |
          benchmark-results.json
          performance-comparison.json
          performance-comparison.md
          performance-summary.md
        retention-days: 30