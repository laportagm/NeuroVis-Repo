# GDScript Formatter Configuration for NeuroVis
# Educational medical visualization platform
#
# This configuration ensures consistent code formatting across the project
# while preserving medical terminology and educational documentation

[tool.gdformat]
# Line length for code (excluding comments and strings)
line-length = 100

# Indentation
indent = 4
use-tabs = false

# Spacing
spaces-around-operators = true
spaces-after-comma = true
spaces-after-colon = true
spaces-before-colon = false
spaces-in-brackets = false
spaces-in-parentheses = false
spaces-in-dictionary = true

# Line breaks
max-blank-lines = 2
trailing-comma = true
blank-line-after-func = true
blank-line-before-class = true
blank-line-before-func = true

# Comments
preserve-comment-formatting = true
align-trailing-comments = true
single-line-comment-prefix = "# "

# Strings
normalize-string-quotes = false  # Preserve original quotes for medical terms

# Educational documentation
preserve-block-comments = true
preserve-annotation-comments = true  # @performance, @accessibility, etc.

# Class structure ordering (enforced order)
class-definitions-order = [
    "tool",
    "class_name",
    "extends",
    "docstring",
    "signals",
    "enums",
    "constants",
    "exports",
    "public-variables",
    "private-variables",
    "onready-variables",
    "optional-built-in-virtual-methods",
    "built-in-virtual-methods",
    "public-methods",
    "private-methods"
]

# Built-in virtual methods order
built-in-virtual-methods-order = [
    "_init",
    "_ready",
    "_enter_tree",
    "_exit_tree",
    "_process",
    "_physics_process",
    "_input",
    "_unhandled_input",
    "_unhandled_key_input",
    "_draw"
]

# Special handling for medical/educational code
[tool.gdformat.preserve]
# Preserve formatting in these patterns
patterns = [
    "# Medical:",
    "# Educational:",
    "# Clinical:",
    "# Anatomy:",
    "# Performance:",
    "# Accessibility:",
    "# WCAG",
    "# TODO:",
    "# FIXME:",
    "# NOTE:",
    "# WARNING:",
    "# HACK:"
]

# Preserve exact formatting in these files
files = [
    "assets/data/anatomical_data.json",
    "**/*_test.gd",
    "**/test_*.gd"
]

[tool.gdparse]
# Parser settings for syntax validation
# Godot 4.4 compatibility
godot-version = "4.4"

# Allow modern GDScript features
allow-type-inference = true
allow-lambda-functions = true
allow-await = true
allow-static-functions = true

# Enforce best practices
require-type-hints = false  # Recommended but not enforced
require-return-type = false  # Recommended but not enforced
warn-unused-variables = true
warn-unused-arguments = true
warn-unused-signals = true
warn-integer-division = true

# Medical/Educational specific checks
check-medical-terms = true
validate-accessibility-annotations = true
validate-performance-annotations = true

[tool.neurovis]
# Custom NeuroVis-specific settings
medical-dictionary = ".claude/medical_terms.txt"
autoload-services = [
    "KB",
    "KnowledgeService",
    "AIAssistant",
    "UIThemeManager",
    "ModelSwitcherGlobal",
    "StructureAnalysisManager",
    "DebugCmd"
]

# Performance targets
target-fps = 60
max-draw-calls = 100
max-texture-memory-mb = 500

# Accessibility requirements
min-contrast-ratio = 4.5
min-font-size = 16
wcag-level = "AA"

# Educational metadata requirements
require-learning-objectives = true
require-clinical-relevance = true
require-educational-level = true
